{"version":3,"sources":["../src/CodeBlock.jsx","../src/themes.js","../src/useInjectCss.js","../src/_css.js","../src/index.js"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\r\nimport { THEME_VARS } from \"./themes.js\";\r\nimport useInjectCss from \"./useInjectCss.js\";\r\nfunction applyThemeVars(theme, custom) {\r\n    const base = THEME_VARS[theme] || THEME_VARS.midnight;\r\n    return { ...base, ...(custom || {}) };\r\n}\r\n\r\nfunction useClipboard(text, timeout = 1500) {\r\n    const [copied, setCopied] = useState(false);\r\n    const onCopy = async () => {\r\n        try {\r\n            if (typeof navigator !== \"undefined\" && navigator.clipboard) {\r\n                await navigator.clipboard.writeText(text);\r\n                setCopied(true);\r\n                setTimeout(() => setCopied(false), timeout);\r\n            }\r\n        } catch (e) {\r\n            console.error(\"Copy failed\", e);\r\n        }\r\n    };\r\n    return { copied, onCopy };\r\n}\r\n\r\nexport default function CodeBlock({\r\n                                      code,\r\n                                      language = \"plaintext\",\r\n                                      filename,\r\n                                      showCopy = true,\r\n                                      showInsert = false,\r\n                                      onInsert,\r\n                                      theme = \"midnight\",\r\n                                      customTheme,\r\n                                      fontSize = 14,\r\n                                      fontFamily,\r\n                                      lineNumbers = false,\r\n                                      startLineNumber = 1,\r\n                                      highlightLines = [],\r\n                                      wrap = false,\r\n                                      copyTimeoutMs = 1500,\r\n                                      labels = { copy: \"Copy\", copied: \"Copied!\", insert: \"Insert\" },\r\n                                      className,\r\n                                      style,\r\n                                      autoInjectCSS = true\r\n                                  }) {\r\n    const { copied, onCopy } = useClipboard(code, copyTimeoutMs);\r\n\r\n    const cssVars = useMemo(() => {\r\n        const vars = applyThemeVars(theme, customTheme);\r\n        return {\r\n            ...vars,\r\n            \"--cb-font-size\": `${fontSize}px`,\r\n            ...(fontFamily ? { \"--cb-font\": fontFamily } : {})\r\n        };\r\n    }, [theme, customTheme, fontSize, fontFamily]);\r\n    if (autoInjectCSS) useInjectCss();\r\n    const lines = useMemo(() => code.split(/\\r?\\n/), [code]);\r\n    const hlSet = useMemo(() => new Set(highlightLines || []), [highlightLines]);\r\n    const showHeader = Boolean(filename || showCopy || (showInsert && onInsert));\r\n\r\n    return (\r\n        <div\r\n            className={[\"rt-cb\", lineNumbers ? \"rt-cb--ln\" : \"\", className].filter(Boolean).join(\" \")}\r\n            style={{ ...cssVars, ...(style || {}) }}\r\n        >\r\n            {showHeader && (\r\n                <div className=\"rt-cb__header\">\r\n                    <div className=\"rt-cb__filename\">{filename || \"\"}</div>\r\n                    <div className=\"rt-cb__toolbar\">\r\n                        {showInsert && typeof onInsert === \"function\" && (\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"rt-cb__btn\"\r\n                                aria-label={labels.insert || \"Insert\"}\r\n                                onClick={() => onInsert(code)}\r\n                                title={labels.insert || \"Insert\"}\r\n                            >\r\n                                ➕ {labels.insert || \"Insert\"}\r\n                            </button>\r\n                        )}\r\n                        {showCopy && (\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"rt-cb__btn\"\r\n                                aria-label={copied ? (labels.copied || \"Copied!\") : (labels.copy || \"Copy\")}\r\n                                onClick={onCopy}\r\n                                title={copied ? (labels.copied || \"Copied!\") : (labels.copy || \"Copy\")}\r\n                            >\r\n                                {copied ? \"✔\" : \"⧉\"} {copied ? (labels.copied || \"Copied!\") : (labels.copy || \"Copy\")}\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* pre/code (line numbers: két oszlopos grid) */}\r\n            <pre className={[\"rt-cb__pre\", wrap ? \"wrap\" : \"\"].filter(Boolean).join(\" \")}>\r\n        {lineNumbers ? (\r\n            <div className=\"rt-cb__grid\">\r\n                <div className=\"rt-cb__gutter\" aria-hidden>\r\n                    {lines.map((_, idx) => (\r\n                        <div key={`g${idx}`} className=\"rt-cb__line\">\r\n                            {startLineNumber + idx}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <code className={`rt-cb__code language-${language}`}>\r\n                    {lines.map((ln, idx) => {\r\n                        const lineNo = startLineNumber + idx;\r\n                        const hl = hlSet.has(lineNo);\r\n                        return (\r\n                            <div\r\n                                key={`l${idx}`}\r\n                                className={[\"rt-cb__line\", hl ? \"rt-cb__line--hl\" : \"\"].filter(Boolean).join(\" \")}\r\n                            >\r\n                                {ln || \"\\u200b\"}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </code>\r\n            </div>\r\n        ) : (\r\n            <code className={`rt-cb__code language-${language}`}>\r\n                {code}\r\n            </code>\r\n        )}\r\n      </pre>\r\n        </div>\r\n    );\r\n}\r\n","export const THEME_VARS = {\r\n    dark: {\r\n        \"--cb-bg\": \"#0b0d12\",\r\n        \"--cb-header-bg\": \"#1c2128\",\r\n        \"--cb-border\": \"rgba(255,255,255,0.08)\",\r\n        \"--cb-fg\": \"#e6edf3\",\r\n        \"--cb-subtle\": \"#9aa7b2\",\r\n        \"--cb-accent\": \"#6ca6ff\",\r\n        \"--cb-highlight\": \"rgba(108,166,255,0.15)\"\r\n    },\r\n    light: {\r\n        \"--cb-bg\": \"#f7f8fa\",\r\n        \"--cb-header-bg\": \"#ffffff\",\r\n        \"--cb-border\": \"rgba(0,0,0,0.08)\",\r\n        \"--cb-fg\": \"#1c2128\",\r\n        \"--cb-subtle\": \"#5d6b78\",\r\n        \"--cb-accent\": \"#2f6fed\",\r\n        \"--cb-highlight\": \"rgba(47,111,237,0.12)\"\r\n    },\r\n    midnight: {\r\n        \"--cb-bg\": \"#0b0d12\",\r\n        \"--cb-header-bg\": \"linear-gradient(90deg,#0f131a,#141a22)\",\r\n        \"--cb-border\": \"rgba(255,255,255,0.06)\",\r\n        \"--cb-fg\": \"#e6edf3\",\r\n        \"--cb-subtle\": \"#8391a1\",\r\n        \"--cb-accent\": \"#66d9ef\",\r\n        \"--cb-highlight\": \"rgba(102,217,239,0.16)\"\r\n    },\r\n    solarizedDark: {\r\n        \"--cb-bg\": \"#002b36\",\r\n        \"--cb-header-bg\": \"#073642\",\r\n        \"--cb-border\": \"rgba(255,255,255,0.08)\",\r\n        \"--cb-fg\": \"#eee8d5\",\r\n        \"--cb-subtle\": \"#93a1a1\",\r\n        \"--cb-accent\": \"#b58900\",\r\n        \"--cb-highlight\": \"rgba(181,137,0,0.2)\"\r\n    }\r\n};\r\n","import { useEffect } from \"react\";\r\nimport cssText from \"./_css.js\";\r\n\r\nexport default function useInjectCss(id = \"rt-codeblock-styles\") {\r\n    useEffect(() => {\r\n        if (typeof document === \"undefined\") return; // SSR safe\r\n        if (document.getElementById(id)) return;\r\n\r\n        const style = document.createElement(\"style\");\r\n        style.id = id;\r\n        style.textContent = cssText;\r\n        document.head.appendChild(style);\r\n\r\n    }, [id]);\r\n}\r\n","// auto-generated from src/style.css\nconst css = String.raw`:root {\r\n    --cb-radius: 12px;\r\n    --cb-pad: 16px;\r\n    --cb-font: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\r\n    --cb-font-size: 14px;\r\n    --cb-line-height: 1.55;\r\n}\r\n\r\n.rt-cb {\r\n    border-radius: var(--cb-radius);\r\n    overflow: hidden;\r\n    border: 1px solid var(--cb-border);\r\n    background: var(--cb-bg);\r\n    color: var(--cb-fg);\r\n    box-shadow: 0 8px 20px rgba(0,0,0,0.18);\r\n}\r\n\r\n.rt-cb__header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    background: var(--cb-header-bg);\r\n    padding: 8px 12px;\r\n    border-bottom: 1px solid var(--cb-border);\r\n}\r\n\r\n.rt-cb__filename {\r\n    font-size: 12px;\r\n    color: var(--cb-subtle);\r\n    user-select: text;\r\n}\r\n\r\n.rt-cb__toolbar {\r\n    display: flex;\r\n    gap: 6px;\r\n}\r\n\r\n.rt-cb__btn {\r\n    appearance: none;\r\n    border: 1px solid transparent;\r\n    background: transparent;\r\n    color: var(--cb-subtle);\r\n    font-size: 12px;\r\n    padding: 6px 10px;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    transition: all .15s ease;\r\n}\r\n.rt-cb__btn:hover {\r\n    background: rgba(255,255,255,0.06);\r\n    color: var(--cb-fg);\r\n}\r\n.rt-cb__btn:focus-visible {\r\n    outline: 2px solid var(--cb-accent);\r\n    outline-offset: 2px;\r\n}\r\n\r\n.rt-cb__pre {\r\n    margin: 0;\r\n    padding: var(--cb-pad);\r\n    font-family: var(--cb-font);\r\n    font-size: var(--cb-font-size);\r\n    line-height: var(--cb-line-height);\r\n    overflow-x: auto;\r\n    white-space: pre;\r\n    position: relative;\r\n}\r\n\r\n.rt-cb__pre.wrap { /* wrap=true */\r\n    white-space: pre-wrap;\r\n    word-break: break-word;\r\n}\r\n\r\n/* Code grid for line numbers */\r\n.rt-cb--ln .rt-cb__grid {\r\n    display: grid;\r\n    grid-template-columns: auto 1fr;\r\n    gap: 12px;\r\n}\r\n\r\n.rt-cb__gutter {\r\n    user-select: none;\r\n    color: var(--cb-subtle);\r\n    text-align: right;\r\n    opacity: .7;\r\n}\r\n\r\n.rt-cb__line {\r\n    display: block;\r\n}\r\n\r\n.rt-cb__line--hl {\r\n    background: var(--cb-highlight);\r\n    margin: 0 calc(var(--cb-pad) * -1);\r\n    padding: 0 var(--cb-pad);\r\n}\r\n\r\n/* Responsive tweaks */\r\n@media (max-width: 640px) {\r\n    :root { --cb-font-size: 13px; }\r\n    .rt-cb__filename { font-size: 11px; }\r\n    .rt-cb__btn { font-size: 11px; padding: 6px 8px; }\r\n}\r\n`;\nexport default css;\n","import CodeBlock from \"./CodeBlock.jsx\";\r\nexport { THEME_VARS } from \"./themes.js\";\r\nexport default CodeBlock;"],"mappings":"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","names":["React","useMemo","useState","THEME_VARS","useEffect","css","css_default","useInjectCss","id","useEffect","style","css_default","applyThemeVars","theme","custom","THEME_VARS","useClipboard","text","timeout","copied","setCopied","useState","e","CodeBlock","code","language","filename","showCopy","showInsert","onInsert","customTheme","fontSize","fontFamily","lineNumbers","startLineNumber","highlightLines","wrap","copyTimeoutMs","labels","className","style","autoInjectCSS","onCopy","cssVars","useMemo","useInjectCss","lines","hlSet","showHeader","React","_","idx","ln","lineNo","hl","index_default","CodeBlock"]}